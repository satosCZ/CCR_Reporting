@model Project_REPORT_v7.Models.PasswordTable

@{
    ViewBag.Title = "Create";
}

<script>
    $(function () {
        $("#System").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/PasswordTables/GetSystem",
                    dataType: "json",
                    type: "POST",
                    data: {
                        term: request.term,
                        cnt: 5
                    },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { label: item.System, value: item.System };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log(ui);
            }
        });
    });
</script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
    <h2 class="text-center">Add Password</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control text-center", autofocus = "autofocus" } })
                    <div>
                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:capitalize" } })
                    <div>
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                    <div>
                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.System, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.System, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                    <div>
                        @Html.ValidationMessageFor(model => model.System, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <p class="bg-warning center-block">* - Required</p>
    <div class="modal-footer">
        <span id="progress" class="text-center center-block">
            <img src="~/Content/Animation/Rhombus.gif" alt="Wait" />
            Wait...
        </span>
        @if (TempData.ContainsKey("ErrorMessage"))
        {
            <div id="error" class="panel-danger" aria-hidden="true">
                <p class="text-danger">@TempData["ErrorMessage"].ToString();</p>
            </div>
        }
        <input class="btn btn-primary" type="submit" value="Save" />
        <button class="btn btn-warning" data-dismiss="modal">Close</button>
    </div>
}

<script>
    $('form').removeData("validator").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse($('form'));
</script>
