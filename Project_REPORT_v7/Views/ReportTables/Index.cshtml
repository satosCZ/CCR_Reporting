@*@model IEnumerable<Project_REPORT_v7.Models.ReportTable>*@
@model PagedList.IPagedList<Project_REPORT_v7.Models.ReportTable>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Index";
}

<script>
    $(function () {
        $(".radiobtn").checkboxradio({
            icon: false
        });
        from = $("#fromDT")
            .datepicker({
                defaultDate: "",
                changeMonth: true,
                numberOfMonths: 1,
                dateFormat: "dd.mm.yy"
            })
            .on("change", function () {
                to.datepicker("option", "minDate", getDate(this));
            }),
            to = $("#toDT").datepicker({
                changeMonth: true,
                numberOfMonths: 1,
                dateFormat: "dd.mm.yy"
            })
                .on("change", function () {
                    from.datepicker("option", "maxDate", getDate(this));
                });

        function getDate(element) {
            var date;
            try {
                date = $.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }
            return date;
        }
     });
</script>

<h2>Index</h2>
<p>
    @Html.ActionLink("Create New", "Create", "ReportTables", htmlAttributes: new { @class = "btn btn-primary" })
</p>

<div class="navbar navbar-default">
    <div class="container-fluid">
        @using (Html.BeginForm("Filter", "ReportTables", FormMethod.Post, htmlAttributes: new { @class = "navbar-form navbar-left" }))
        {

            <div class="form-group">
                <label for="fromDT">From</label>
                <input type="text" id="fromDT" name="fromDT" class="form-control" placeholder="@DateTime.MinValue.ToString("dd.MM.yyyy")" aria-describedby="fromDT_label" autocomplete="off" />
            </div>
            <div class="form-group">
                <label for="toDT">To</label>
                <input type="text" id="toDT" name="toDT" class="form-control" placeholder="@DateTime.Now.ToString("dd.MM.yyyy")" autocomplete="off" />
            </div>
            <input type="submit" value="Filter" class="btn btn-default" />
        }
    </div>
</div>
<br />
<table class="table table-responsive table-striped">
    <tr>
        <th>
            @Html.DisplayName("Date")
            @*@Html.DisplayNameFor(model => model.Date)*@
        </th>
        <th>
            @Html.DisplayName("Shift")
            @*@Html.DisplayNameFor(model => model.Shift)*@
        </th>
        <th>
            @Html.DisplayName("Member 1")
            @*@Html.DisplayNameFor(model => model.MembersTable.LastName)*@
        </th>
        <th>
            @Html.DisplayName("Member 2")
            @*@Html.DisplayNameFor(model => model.MembersTable1.LastName)*@
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Shift)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MembersTable.FirstName) @Html.DisplayFor(modelItem => item.MembersTable.LastName)
                @Html.HiddenFor(modelItem => item.Member_One_ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MembersTable1.FirstName) @Html.DisplayFor(modelItem => item.MembersTable1.LastName)
                @Html.HiddenFor(modelItem => item.Member_Two_ID)
            </td>
            <td>
                @*@if (item.Date >= DateTime.Now.AddHours(-8).AddMinutes(-10))
                    {*@
                <a href="@Url.Action("Edit", "ReportTables", new { id=item.ReportID})"><span class="glyphicon glyphicon-cog" aria-hidden="true" /></a>
                <a href="@Url.Action("Details", "ReportTables", new { id=item.ReportID})"><span class="glyphicon glyphicon-pencil" aria-hidden="true" /></a>
                <a href="@Url.Action("Delete", "ReportTables", new { id=item.ReportID})"><span class="glyphicon glyphicon-trash" aria-hidden="true" /></a>
                @*}
                    else
                    {
                        <a href="@Url.Action("Details", "ReportTables", new { id=item.ReportID})"><span class="glyphicon glyphicon-open" aria-hidden="true"></span></a>
                        <a href="@Url.Action("Delete", "ReportTables", new { id=item.ReportID})"><span class="glyphicon glyphicon-trash" aria-hidden="true" /></a>
                    }*@
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
