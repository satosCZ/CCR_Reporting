@model Project_REPORT_v7.Models.ReIssueTable

@{
    ViewBag.Title = "Create Multiple";
}

<script>
    $(function () {
        $("#User").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/ReIssueTables/GetWho",
                    dataType: "json",
                    type: "POST",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { label: item.User, value: item.User };
                        }))
                    }
                });
            },
            appendTo: ".modal-body",
            minLength: 2,
            select: function (event, ui) {
                console.log(ui);
            }
        });

        $("#Objective").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/ReIssueTables/GetWhat",
                    dataType: "json",
                    type: "POST",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { label: item.Objective, value: item.Objective };
                        }))
                    }
                });
            },
            minLength: 2,
            select: function (event, ui) {
                console.log(ui);
            }
        });
    });
</script>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
    <h2>Add Re-Issue</h2>
</div>

@using (Html.BeginForm("CreateMultiple", "ReissueTables", FormMethod.Post, htmlAttributes: new {@lang="cs-CZ"}))
{
    <div class="modal-body">
        @Html.AntiForgeryToken()
        <div class="form-horizontal" id="ReIssueModalCreate">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control", @autofocus="autofocus" } })
                    <div>
                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control" } })
                    <div>
                        @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Objective, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Objective, new { htmlAttributes = new { @class = "form-control" } })
                    <div>
                        @Html.ValidationMessageFor(model => model.Objective, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BodyNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.BodyNum, htmlAttributes: new { @class = "form-control" })
                    <div>
                        @Html.ValidationMessageFor(model => model.BodyNum, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <span id="progress" class="text-center center-block">
            <img src="~/Content/Animation/Rhombus.gif" alt="Wait" />
            Wait...
        </span>
        @if (TempData.ContainsKey("ErrorMessage"))
            {
                <div id="error" class="panel-danger" aria-hidden="true">
                    <p class="text-danger">@TempData["ErrorMessage"].ToString();</p>
                </div>
            }
        <input class="btn btn-primary" type="submit" value="Save" />
        <button class="btn btn-warning" data-dismiss="modal">Close</button>
    </div>
}

<script>
    $('form').removeData("validator").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse($('form'));
</script>
